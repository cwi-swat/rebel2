module paper::sepact::checks::OriginatorBankChecks

import paper::sepact::OriginatorBank
import paper::sepact::messages::CustomerCreditTransferRequest
import paper::sepact::data::Address
import paper::sepact::data::Party
import paper::sepact::data::IBAN
import paper::sepact::data::Money
import paper::sepact::data::Date
import paper::sepact::data::ID
 
import paper::sepact::services::BICChecker
import paper::sepact::services::ClearingAndSettlement

config Full = ob: OriginatorBank is accepting,
              p1,p2:Party, 
              a1,a2:Address,
              ib1,ib2:IBAN, 
              m: Money,
              d: Date,
              id1,id2: ID,
              ct: CustomerCreditTransferRequest is uninitialized,
              biccheck: BICChecker,
              cas:ClearingAndSettlement;

spec MockIBAN  
  cc: String,
  bban: String;
  
  states:
    a->a:empty; 
    
config Small = ib1,ib2:MockIBAN abstracts IBAN, 
               m: Money, 
               d: Date, 
               bicChecker: BICChecker,
               cas:ClearingAndSettlement, 
               ob: OriginatorBank is accepting,
               ct: CustomerCreditTransferRequest forget originator, remittanceInfo, 
                  beneficiaryId, beneficiary, purpose, purposeCategory is uninitialized;
               
assert CanSettleInstruction = eventually exists ob:OriginatorBank | settle on ob;
run CanSettleInstruction from Small in max 5 steps expect trace; 
//run CanSettleInstruction from Full in max 3 steps expect trace; 

              