module paper::debitcard::checks::LimitChecksWithMocks

import paper::debitcard::Limit
import paper::debitcard::types::Money
import paper::debitcard::types::Date   

import paper::debitcard::checks::DateMock  
import paper::debitcard::checks::LimitChecks  
 
config MockedDates = l: Limit is uninitialized, m1,m2,m3,m4: Money, d1,d2,d3: DateMock mocks Date;

run CanInitializeLimit from MockedDates in max 1 steps expect trace;   
run CanAddOverrideAndCheck from MockedDates in max 3 steps expect trace; 
 
check CantOverdrawLimit from MockedDates in max 5 steps expect no trace;
check LimitIsAlwaysPositive from MockedDates in max 4 steps expect no trace;
check NormalAndOverrideAlwaysInSameCurrency from MockedDates in max 4 steps expect no trace;