module lib::Id

spec Id
  val: Integer;
      
  event create(val: Integer)
    pre: val > 0;
    post: this.val' = val;
  
  internal event frame()
    post: this.val' = this.val;
  
  internal event greaterThan(other: Id)
    pre: other.lesserThanEqVal(this.val), other.frame();  
  
  internal event lesserThan(other: Id)
    pre: other.greaterThanEqVal(this.val), other.frame();
  
  internal event lesserThanEqVal(val: Integer)
    pre: this.val <= val;
    
  internal event greaterThanEqVal(val: Integer)
    pre: this.val >= val;  
    
  states:
    (*) -> created: create;
    created -> created: greaterThan, greaterThanEqVal, lesserThan, lesserThanEqVal, frame;

fact UniqueIds
  = always forall id1,id2: Id | 
     ((id1 is initialized && id2 is initialized && id1.val = id2.val) => id1 = id2);
     
fact PositiveIds
  = always forall id: Id | id.val > 0;     