module sync::double::Checks

import sync::double::Follower
import sync::double::Leader

config TwoOfEachUninitialized
  l1, l2: Leader in uninitialized,
  f1, f2: Follower in uninitialized;
  
config AllHitTwice
  l1, l2: Leader in active with times = 2,
  f1, f2: Follower in active with times = 2;
  
 assert AllLeadersActive
  starting from TwoOfEachUninitialized,
  eventually forall l: Leader | l in active;
    
 assert HitTwiceReachable
  starting from TwoOfEachUninitialized,
  eventually in AllHitTwice;
 
 assert UniqueFollower
  starting from TwoOfEachUninitialized,
  always forall l1: Leader, l2: Leader | (l1 in initialized && l2 in initialized && l1 != l2) => l1.follower != l2.follower;
 
 check AllLeadersActive in max 10 steps;
 
 assert SIEAccept_DepositWithdraw
  from TwoAccounts,
  forall a1,a2: Account | a1 != a2 => next a1.deposit happened && next next a1.withdraw happened  