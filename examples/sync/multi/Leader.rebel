module sync::multi::Leader

import sync::multi::Follower

spec Leader
  followers: set Follower,
  nrOfHits: Integer;
  
  event start()  
    post: 
      this.nrOfHits' = 0,  
      this.followers' = {};    
      
  event add(follower: Follower) 
    pre: follower is initialized; 
    post: this.followers' = this.followers + follower; 
  
  event complete()
  
  event hitSome() 
    pre: 
      exists f:this.followers | f.hit(), // there must be at least one linked follower that gets hit
      forall f:this.followers | (f.hit() || noOp(f)); // either a linked follower is hit or it should not change 
    post: this.nrOfHits' = this.nrOfHits + 1;
  
  states:
    (*) -> link: start;
    link -> link: add; 
    link -> active: complete;
    active -> active: hitSome; 

assert AFollowerWith5Hits = eventually exists f1,f2: Follower | f1 != f2 && f1.nrOfHits = 3 && f2.nrOfHits = 1; 
  
config Simple = l: Leader, f1,f2,f3: Follower;
  
check AFollowerWith5Hits from Simple in max 12 steps;   