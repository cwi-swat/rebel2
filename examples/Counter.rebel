module Counter

spec Counter
  i: Integer;
  
  init event create()
    post: this.i' = 0;
  
  event inc()
    post: this.i' = this.i + 1;
    
  event dec()
    pre: this.i > 3;
    post: this.i' = this.i - 1;
  
  states:
    (*) -> active: create;
    active -> active: inc,dec;
  
assert EventuallyHigherThan3 = eventually always exists c:Counter | c.i > 3;
assert Eventually3Later5 = eventually exists c:Counter | c.i = 3 && eventually c.i = 5;

config Simple = c: Counter is uninitialized;

check EventuallyHigherThan3 from Simple in max 6 steps with infinite trace;
check Eventually3Later5 from Simple in max 7 steps;  