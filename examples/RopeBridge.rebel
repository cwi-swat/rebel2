module RopeBridge

spec Adventurer
  timeToCross: Integer;
    
  internal event crossNearToFar()
  internal event crossFarToNear()
    
  states:
    near -> far: crossNearToFar;
    far -> near: crossFarToNear;
    
spec FlashLight
  totalTimeSpend: Integer;
  
  event crossNearToFar(p1: Adventurer, p2: Adventurer)
    pre: 
      p1.crossNearToFar(), p2.crossNearToFar();
    post:
      if p1.timeToCross > p2.timeToCross 
        then this.totalTimeSpend' = this.totalTimeSpend + p1.timeToCross
        else this.totalTimeSpend' = this.totalTimeSpend + p2.timeToCross;
      
  event crossFarToNear(p: Adventurer)
    pre: p.crossFarToNear();
    post: this.totalTimeSpend' = this.totalTimeSpend + p.timeToCross; 
    
  states:
    near -> far: crossNearToFar;
    far -> near: crossFarToNear;   
      
assert EverybodyCrossedInTheLeastTime
  = eventually ((forall a: Adventurer | a is far) && (exists fl: FlashLight | fl.totalTimeSpend = 17));

config EverybodyNear
  = a1,a2,a3,a4: Adventurer is near, 
    fl: FlashLight is near with totalTimeSpend = 0,
    a1 with timeToCross = 1,
    a2 with timeToCross = 2,  
    a3 with timeToCross = 5,
    a4 with timeToCross = 10;
  
check EverybodyCrossedInTheLeastTime from EverybodyNear in max 6 steps;  

